{
	"info": {
		"_postman_id": "8005aa0e-1c94-4750-8974-d9c95e864c09",
		"name": "Trello API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19650173"
	},
	"item": [
		{
			"name": "Get all boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"const boardId = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set('boardId', boardId[0].id);\r",
							"// const existingBoardIds = boardId.map(board=> board.id);\r",
							"// console.log(existingBoardIds);\r",
							"// pm.collectionVariables.set('existingBoardIds',existingBoardIds);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/members/me/boards?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"members",
						"me",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const newBoard = pm.response.json();\r",
							"pm.collectionVariables.set('boardId',newBoard.id)\r",
							"\r",
							"pm.test('Board is created', ()=>{\r",
							"    pm.expect(newBoard.name).to.eql('Test '+ pm.collectionVariables.get('boardNumber'));\r",
							"    pm.expect(newBoard.closed).to.be.false;\r",
							"   \r",
							"});\r",
							"\r",
							"pm.test('Board is private',()=>{\r",
							"     pm.expect(newBoard.prefs.permissionLevel).to.eql('private');\r",
							"\r",
							"})\r",
							"\r",
							"pm.test('Calendar is disbled',()=>{\r",
							"    const calendarView = newBoard.prefs.switcherViews.find(view => view.viewType === 'Calendar');\r",
							"    pm.expect(calendarView).to.be.an('object');\r",
							"    pm.expect(calendarView.enabled).to.be.false;\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let boardNumber= pm.collectionVariables.get('boardNumber')\r",
							"if(isNaN(boardNumber)){\r",
							"    boardNumber=0;\r",
							"}\r",
							"boardNumber++;\r",
							"pm.collectionVariables.set('boardNumber',boardNumber);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/?name=Test {{boardNumber}}&key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "Test {{boardNumber}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TODO list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"const todoListId = pm.response.json();\r",
							"pm.collectionVariables.set('todoListId',todoListId.id)\r",
							"\r",
							"\r",
							"pm.test('List is created', ()=>{\r",
							"    pm.expect(todoListId.name).to.eql('TODO');\r",
							"    pm.expect(todoListId.closed).to.be.false;\r",
							"   \r",
							"});\r",
							"\r",
							"\r",
							"pm.test('Created in the board',()=>{\r",
							"    pm.expect(todoListId.idBoard).to.eql(pm.collectionVariables.get('boardId'));\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists?name=TODO&idBoard={{boardId}}&key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const doneListId = pm.response.json();\r",
							"pm.collectionVariables.set('doneListId',doneListId.id)\r",
							"\r",
							"pm.test('List is created', ()=>{\r",
							"    pm.expect(doneListId.name).to.eql('DONE');\r",
							"    pm.expect(doneListId.closed).to.be.false;\r",
							"   \r",
							"});\r",
							"\r",
							"\r",
							"pm.test('Created in the board',()=>{\r",
							"    pm.expect(doneListId.idBoard).to.eql(pm.collectionVariables.get('boardId'));\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists?name=DONE&idBoard={{boardId}}&key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "DONE"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const cardId = pm.response.json();\r",
							"pm.collectionVariables.set('cardId',cardId.id)\r",
							"\r",
							"pm.test('Card is created', ()=>{\r",
							"    pm.expect(cardId.name).to.eql('Sign-up for Trello');\r",
							"    // pm.expect(doneListId.closed).to.be.false;\r",
							"   \r",
							"});\r",
							"\r",
							"\r",
							"pm.test('Created in the List',()=>{\r",
							"    pm.expect(cardId.idList).to.eql(pm.collectionVariables.get('todoListId'));\r",
							"})\r",
							"\r",
							"pm.test('Created in the current board',()=>{\r",
							"    pm.expect(cardId.idBoard).to.eql(pm.collectionVariables.get('boardId'));\r",
							"})\r",
							"\r",
							"pm.test('Calendar is disbled',()=>{\r",
							"    const attachments = cardId.badges.attachmentsByType.trello.card;\r",
							"    pm.expect(attachments).to.eql(0);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/cards?name=Sign-up for Trello&key={{trelloKey}}&token={{trelloToken}}&idList={{todoListId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "name",
							"value": "Sign-up for Trello"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{todoListId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card to DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Card is moved\",()=>{\r",
							"    pm.expect(response.name).to.eql('Sign-up for Trello')\r",
							"})\r",
							"\r",
							"pm.test('Card is in the done list',()=>{\r",
							"    pm.expect(response.idList).to.eql(pm.collectionVariables.get('todoListId'))\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/cards/:id?key={{trelloKey}}&token={{trelloToken}}&idList={{todoListId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{todoListId}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{cardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const existingBoardIds = pm.collectionVariables.get('existingBoardIds')\r",
							"// console.log(existingBoardIds);\r",
							"\r",
							"// const boardId = existingBoardIds.pop();\r",
							"// pm.collectionVariables.set('boardId',boardId);\r",
							"// pm.collectionVariables.set('existingBoardIds',existingBoardIds);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get deleted board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.trello.com"
		},
		{
			"key": "trelloKey",
			"value": "2907c90766420e36a1ac76938d9dfbeb"
		},
		{
			"key": "trelloToken",
			"value": "ATTA588f674fc38f3cef0f347e6f07ea80d80754bb953a149d66baa309a681d7fc53005724D3"
		},
		{
			"key": "boardId",
			"value": ""
		},
		{
			"key": "todoListId",
			"value": ""
		},
		{
			"key": "cardId",
			"value": ""
		},
		{
			"key": "doneListId",
			"value": ""
		},
		{
			"key": "boardNumber",
			"value": ""
		}
	]
}